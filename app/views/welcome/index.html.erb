<!-- http://pokeapi-how.appspot.com/page5 This is where i got help with pokeAPI(guide) -->
<body id="LoginForm">
	<div class="container">
		<!-- If users is not logged in, offer log in form -->
		<%if logged_in? == false%>

			<div class="login-form">
				<div class="main-div margin-100">
				    <div class="panel">
				    	<div class="margin-bottom-30"><%=image_tag("/Pokaymoon_1.png", height:"100")%></div>
					   <h2>Sign In</h2>
						   </div>

						    <form id="Login" action="/sign_in" method="post" >
						        <div class="form-group">
						            <input type="email" class="form-control" id="inputEmail" placeholder="Email Address" name="email">
						        </div>
						        <div class="form-group">
						            <input type="password" class="form-control" id="inputPassword" placeholder="Password" name="password">
						        </div>
						        <div class="forgot">
						        	<a href="reset.html">Forgot password?</a>
								</div>
				        		<button type="submit" class="btn btn-primary">Login</button>

							   	<div>
						  			<%= link_to "Sign in with Google", "/auth/google_oauth2", class:"btn btn-red top-margin" %>
						   		</div>
				   			</form>
				    </div>
				</div>
		<!-- Display the homepage -->
		<%else%>

			<div class="container top-margin">
				<div>
					<h1 class="top-margin">Welcome Back <%=current_user.first_name%></h1>
				</div>
				<div class="text-align-center">
					<div class = "container thin-border-box top-margin">
							<!-- Randomly generates a number and gives you a pokemon -->
						    <div>
						       	 <h4>Buy a Pokemon today!</h4>    
						    </div>
						    <div data-role="main" class="ui-content">
							    <form id="pokeForm" action="#pokeDetails-page" method="post">
							        <div>
							        	 <button type="button" onclick="pokeSubmit()" class="btn btn-primary">Generate</button> <%=image_tag("/pokecoin.png",height:"35em")%> <strong>15</strong><br/>
							        </div>
							    </form>
						    </div>
					</div>

					<div class = "container thin-border-box top-margin">
			    		<div>
					       	<h4>Coin Generator!</h4>
					       	<p>For now, knock urself out generating coins. Further improvements include - only allow coin generation every 24h.</p>
					        <!-- <h6>Click here to generate coins every 24 hours :)</h6> -->
			        		<button type="button" onclick="coinGenerator()" class="btn btn-primary">Good Luck!</button><br/>
					    </div>
					</div>

					<div class = "container thin-border-box top-margin">
						<div>
							<h4>Other pok√©mons in the system!</h4>
						</div>
						<!-- Implement Find pokemon by species search bar here -->
							<%=form_tag("/search_pokemon", method: "get") do %>
							    <%= label_tag "Search for Pokemons:" %>
							    <%= text_field_tag "query", nil, list: "list" %>
							      <datalist id="list"></datalist>
							    <%= submit_tag("Search") %>
							<% end %>
						<div>
							
						</div>
						<div>
							<%@pokemons.each do |p|%>
							<a href="/pokemons/<%=p.id%>"><%=image_tag("#{p.image_url}", height: '150em')%></a>
							<%end%>
						</div>
					</div>
				</div>
			</div>
		<%end%>

	</div>


<script type="text/javascript">

	function pokeSubmit(){

		// Making sure it doesnt hit 0
		var min = 1
		var max = 100
		var param = Math.floor(Math.random() *(+max - +min))+ +min; 
	    // var param = document.getElementById("pokeInput").value;
	    var pokeURL = "https://pokeapi.co/api/v2/pokemon/" + param+"/";
	    console.log(param)
	    console.log(pokeURL)

	    // jQuery method to make a http get request, sends the http url and function.
	    $.getJSON(pokeURL, function(data){
	    	// Pokeapi responds with JSON data
	        console.log(data);
	        // Converts JSON into formatted string
	        // console.log(JSON.stringify(data, null, "  "));

	        // different formats of getting the data out
	        // console.log(data.name)
	        // console.log(data.id)
	        // console.log(data.height + "m")
	       	// console.log(data.weight + "kg")
	       	// console.log(data.moves[0].move.name)
	       	var random = Math.floor(Math.random() * data.moves.length)
	       	// console.log("random number =" + random)
	       	// console.log(data.moves[random].move.name)
	        // console.log(data.held_items[0].version_details[0].rarity)
	        // Gets the image
	        // console.log(data.sprites.front_default)

	        // Get only what i need and store it
	        var pokemon = [{ name: data.name, species:data.name, national_id: data.id, height: data.height, weight: data.weight, moves: data.moves[random].move.name,image_url:data.sprites.front_default, image_url_1: data.sprites.back_default}];

	        console.log(pokemon)

	        // Convert info into a json
	        var pokemon_json =JSON.stringify(pokemon);

			 // Passing json response to rails controller
	        $.post("/pokemons", { jsonData: pokemon_json },
			function(data, textStatus) {
			if (textStatus != "success") {
			result = "false";
			}
			});
	    });
	}

	function coinGenerator(){

		// Making sure it doesnt hit 0
		var min = 0
		var max = 100
		var coins = [Math.floor(Math.random() *(+max - +min))+ +min] 
		console.log(coins)

		var coin_json =JSON.stringify(coins);

		$.post("/coins", { jsonData: coin_json },
		function(data, textStatus) {
		if (textStatus != "success") {
		result = "false";
		}
		});
	}


	// get element
	var query = document.getElementById("query")

	// catches the key up
	if (query){
	  query.addEventListener("keyup", function(event){
	    autocomplete(event)
	  })
	}

	window.globalXHR = new XMLHttpRequest()

	function autocomplete(event) {
	  //retrieve input
	  var input = event.target

	  //get datalist element for results
	  var list = document.getElementById("list")
	  	var xhttp = new XMLHttpRequest();
	    xhttp.onreadystatechange = function() {
	      if (this.readyState == 4 && this.status == 200) {
	        
	        //convert json response to an object
	        var response = JSON.parse(this.responseText)

	        //clear previous results
	        list.innerHTML = ""

	        response.forEach(function(element){
	          //create new option element
	          var option = document.createElement("option")
	          option.value = element

	          //append option to list
	          list.appendChild(option)
	        })
	      }
	    }
	    // This sends a get request to user controller with the input params
	    xhttp.open("GET", "/pokemon_search_autocomplete?query="+ input.value,true);
 		xhttp.send();
	   }
	

</script>


</body>

